new basket, file, publickey, verify, dapphash, return, updateDapp, dappUriCh, insertArbitrary(`rho:registry:insertArbitrary`), stdout(`rho:io:stdout`) in {

  publickey!!("PUBLIC_KEY") |
  file!("DAPPY_FILE") |

  contract updateDapp(message, return) = {
    return!("success: record updated") |
    for (current <- file) {
      file!(*message.get("payload"))
    }
  } |

  insertArbitrary!(*updateDapp, *dappUriCh) |

  for (uri <- dappUriCh) {
    basket!({
      "registry_uri": *uri,
      "unforgeable_name": *file
    })
  } |

  stdout!(*basket)
}
